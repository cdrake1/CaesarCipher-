open System

let add (A: int list) : int list = 
    if A = [] then
        []
        
    else
        ((B - 97 + shiftB) % 26) + 97
        


    //function from zip file
let rec charListToIntList (B: char list) : int list =
    if B = [] then
        []
    else
        [int (List.head B)] @ charListToIntList (List.tail B)
    

let rec Encrypt (testOne: int list) (shiftB: int) (j: int) = 

    //printfn "%A" testOne
    
    let encrypted = testOne
    
    if( j < testOne.Length) then
    
        if(testOne.[j] >= 97) && (testOne.[j] <= 122) then
            let x = ((testOne.[j] - 97 + shiftB) % 26) + 97
            printfn "%d" x
            
    
    Encrypt encrypted shiftB (j + 1)
    

let CaesarCipher() =

    let testString = "Bugs Bunny"
    let shiftA = 7
    let test = testString.ToLower()  //string to lower
    let i = 0
    
    let cList = List.ofSeq test //create a char list of string
    let asciiList = charListToIntList cList //create an ascii list
    
    
    
    Encrypt asciiList shiftA i
    
CaesarCipher()
