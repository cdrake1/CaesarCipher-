open System


    //function from zip file
let rec charListToIntList (L: char list) : int list =
    if L = [] then
        []
    else
        [int (List.head L)] @ charListToIntList (List.tail L)
    

let rec Encrypt (testOne: int list) (shiftB: int) (j: int) = 

    //printfn "%A" testOne
    
    let encrypted = testOne
    
    if( j < testOne.Length) then
    
        if(testOne.[j] >= 97) && (testOne.[j] <= 122) then
            encrypted.[j] = ((testOne.[j] - 97 + shiftB) % 26) + 97. //giving me tons of errors with the if statements and types
        else
            encrypted.[j] = testOne.[j]
            
    else
        encrypted
            
    
    printfn "%A" encrypted
    
    Encrypt encrypted shiftB (j + 1)
    

let CaesarCipher() =

    let testString = "Bugs Bunny"
    let shiftA = 7
    let test = testString.ToLower()  //string to lower
    let i = 0
    
    let cList = List.ofSeq test //create a char list of string
    let asciiList = charListToIntList cList //create an ascii list
    
    
    
    Encrypt asciiList shiftA i
    
CaesarCipher()
